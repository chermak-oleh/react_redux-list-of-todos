{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","helper.ts","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","filterReducer","todos","todosReducer","filter","id","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","className","map","completed","title","isCurrent","cn","onClick","currentTodoActions","TodoFilter","value","onChange","event","target","filterActions","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","selectedUser","setSelectedUser","isLoading","setIsLoading","isError","setIsError","getUserFromServer","a","userId","user","useEffect","href","email","name","App","hasError","setHasError","hasTodosLoaded","setHasTodosLoaded","visibleTodos","useMemo","filterType","lowerQuery","toLowerCase","lowerTitle","includes","getVisibleTodos","getTodosFromServer","apiTodos","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37262ce1.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  const { type } = action;\n\n  switch (type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = { type: 'filter/SET_QUERY', payload: string };\ntype SetStatusAction = { type: 'filter/SET_STATUS', payload: Status };\ntype ClearQueryAction = { type: 'filter/CLEAR_QUERY' };\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload: query,\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload: status,\n});\n\nconst clearQuery = (): ClearQueryAction => ({\n  type: 'filter/CLEAR_QUERY',\n});\n\nexport const actions = { setQuery, setStatus, clearQuery };\n\ntype Action = SetQueryAction | SetStatusAction | ClearQueryAction;\ntype State = {\n  query: string,\n  status: Status,\n};\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (\n  state = initialState,\n  action: Action,\n): State => {\n  const { type } = action;\n\n  switch (type) {\n    case 'filter/SET_QUERY':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'filter/SET_STATUS':\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    case 'filter/CLEAR_QUERY':\n      return {\n        ...state,\n        query: '',\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetAction = { type: 'todos/SET', payload: Todo[] };\ntype AddAction = { type: 'todos/ADD', payload: Todo };\ntype RemoveAction = { type: 'todos/REMOVE', payload: Todo };\n\nconst setTodos = (todos: Todo[]): SetAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nconst addTodo = (todo: Todo): AddAction => ({\n  type: 'todos/ADD',\n  payload: todo,\n});\n\nconst removeTodo = (todo: Todo): RemoveAction => ({\n  type: 'todos/REMOVE',\n  payload: todo,\n});\n\nexport const actions = { setTodos, addTodo, removeTodo };\n\ntype State = Todo[];\ntype Action = SetAction | AddAction | RemoveAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): Todo[] => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'todos/SET':\n      return [...payload];\n\n    case 'todos/ADD':\n      return [...state, payload];\n\n    case 'todos/REMOVE':\n      return state.filter(todo => todo.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, completed, title } = todo;\n\n          const isCurrent = id === currentTodo?.id;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={cn(\n                { 'has-background-info-light': isCurrent },\n              )}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n                >\n                  <span className=\"icon\">\n                    <i className={cn(\n                      'far',\n                      { 'fa-eye': !isCurrent },\n                      { 'fa-eye-slash': isCurrent },\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value as Status;\n\n    dispatch(filterActions.setStatus(value));\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    dispatch(filterActions.setQuery(value));\n  };\n\n  const handleClearSearch = () => {\n    dispatch(filterActions.clearQuery());\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const todo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getUserFromServer = async () => {\n    try {\n      if (todo) {\n        const user = await getUser(todo.userId);\n\n        setSelectedUser(user);\n        setIsLoading(true);\n      }\n    } catch (error) {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(currentTodoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            {isError && (\n              <strong className=\"has-text-success\">\n                Unable to load the user\n              </strong>\n            )}\n\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { getVisibleTodos } from './helper';\n\nexport const App: React.FC = () => {\n  const [hasError, setHasError] = useState(false);\n  const [hasTodosLoaded, setHasTodosLoaded] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const visibleTodos = useMemo(\n    () => getVisibleTodos(todos, status, query),\n    [todos, status, query],\n  );\n\n  const getTodosFromServer = async () => {\n    try {\n      const apiTodos = await getTodos();\n\n      dispatch(todosActions.setTodos(apiTodos));\n    } catch (error) {\n      setHasError(true);\n    } finally {\n      setHasTodosLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            {hasError && (\n              <p>Cant Load Todos. Try again later, please</p>\n            )}\n\n            <div className=\"block\">\n              {!hasTodosLoaded && <Loader />}\n\n              {hasTodosLoaded && (\n                <TodoList todos={visibleTodos} />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!currentTodo && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport function getVisibleTodos(\n  todos: Todo[],\n  filterType: Status,\n  query: string,\n): Todo[] {\n  return todos.filter(todo => {\n    const lowerQuery = query.toLowerCase();\n    const lowerTitle = todo.title.toLowerCase();\n\n    switch (filterType) {\n      case 'active':\n        return query\n          ? lowerTitle.includes(lowerQuery) && !todo.completed\n          : !todo.completed;\n\n      case 'completed':\n        return query\n          ? lowerTitle.includes(lowerQuery) && todo.completed\n          : todo.completed;\n\n      default:\n        return query\n          ? lowerTitle.includes(lowerQuery)\n          : todo;\n    }\n  });\n}\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}